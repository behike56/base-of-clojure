; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in Terminal: (cd /Users/behike56/00-Development/000-repo/base-of-clojure; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Using host:port 127.0.0.1:49759 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉base-of-clojure.core꞉> 
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉base-of-clojure.core꞉> 
; Jack-in done.
clj꞉base-of-clojure.core꞉> 
#'base-of-clojure.vector-list-test/make_repeatedly_list-test
clj꞉base-of-clojure.vector-list-test꞉> 
#'base-of-clojure.vector-list-test/make_repeatedly_list-test
clj꞉base-of-clojure.vector-list-test꞉> 
#'base-of-clojure.vector-list-test/make_repeatedly_list-test
clj꞉base-of-clojure.vector-list-test꞉> 
; Error printing return value (ClassCastException) at clojure.core/repeatedly$fn (core.clj:5174).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉base-of-clojure.vector-list-test꞉> 
; Error printing return value (ClassCastException) at clojure.core/repeatedly$fn (core.clj:5174).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉base-of-clojure.vector-list-test꞉> 
; 
; ERROR in () (core.clj:5174)
; 
; expected: (= (list 7 7 7 7 7) (make_repeatedly_list 5 7))
;   actual: java.lang.ClassCastException: class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
;  at clojure.core$repeatedly$fn__6531.invoke (core.clj:5174)
;     clojure.lang.LazySeq.sval (LazySeq.java:42)
;     clojure.lang.LazySeq.seq (LazySeq.java:51)
;     clojure.lang.RT.seq (RT.java:535)
;     clojure.core$seq__5467.invokeStatic (core.clj:139)
;     clojure.core$take$fn__5978.invoke (core.clj:2901)
;     clojure.lang.LazySeq.sval (LazySeq.java:42)
;     clojure.lang.LazySeq.seq (LazySeq.java:51)
;     clojure.lang.RT.seq (RT.java:535)
;     clojure.lang.ASeq.equiv (ASeq.java:45)
;     clojure.lang.Util.pcequiv (Util.java:124)
;     clojure.lang.Util.equiv (Util.java:32)
;     clojure.core$_EQ_.invokeStatic (core.clj:795)
;     clojure.core$_EQ_.invoke (core.clj:785)
;     clojure.lang.AFn.applyToHelper (AFn.java:156)
;     clojure.lang.RestFn.applyTo (RestFn.java:132)
;     clojure.core$apply.invokeStatic (core.clj:667)
;     clojure.core$apply.invoke (core.clj:662)
;     base_of_clojure.vector_list_test$eval9555.invokeStatic (form-init13928129459247513016.clj:20)
;     base_of_clojure.vector_list_test$eval9555.invoke (form-init13928129459247513016.clj:19)
;     clojure.lang.Compiler.eval (Compiler.java:7194)
;     clojure.lang.Compiler.eval (Compiler.java:7149)
;     clojure.core$eval.invokeStatic (core.clj:3215)
;     clojure.core$eval.invoke (core.clj:3211)
;     nrepl.middleware.interruptible_eval$evaluate$fn__1362$fn__1363.invoke (interruptible_eval.clj:87)
;     clojure.lang.AFn.applyToHelper (AFn.java:152)
;     clojure.lang.AFn.applyTo (AFn.java:144)
;     clojure.core$apply.invokeStatic (core.clj:667)
;     clojure.core$with_bindings_STAR_.invokeStatic (core.clj:1990)
;     clojure.core$with_bindings_STAR_.doInvoke (core.clj:1990)
;     clojure.lang.RestFn.invoke (RestFn.java:425)
;     nrepl.middleware.interruptible_eval$evaluate$fn__1362.invoke (interruptible_eval.clj:87)
;     clojure.main$repl$read_eval_print__9206$fn__9209.invoke (main.clj:437)
;     clojure.main$repl$read_eval_print__9206.invoke (main.clj:437)
;     clojure.main$repl$fn__9215.invoke (main.clj:458)
;     clojure.main$repl.invokeStatic (main.clj:458)
;     clojure.main$repl.doInvoke (main.clj:368)
;     clojure.lang.RestFn.invoke (RestFn.java:1523)
;     nrepl.middleware.interruptible_eval$evaluate.invokeStatic (interruptible_eval.clj:84)
;     nrepl.middleware.interruptible_eval$evaluate.invoke (interruptible_eval.clj:56)
;     nrepl.middleware.interruptible_eval$interruptible_eval$fn__1395$fn__1399.invoke (interruptible_eval.clj:152)
;     clojure.lang.AFn.run (AFn.java:22)
;     nrepl.middleware.session$session_exec$main_loop__1465$fn__1469.invoke (session.clj:218)
;     nrepl.middleware.session$session_exec$main_loop__1465.invoke (session.clj:217)
;     clojure.lang.AFn.run (AFn.java:22)
;     java.lang.Thread.run (Thread.java:1570)
nil
clj꞉base-of-clojure.vector-list-test꞉> 
#'base-of-clojure.vector-list-test/make_repeatedly_list-test
clj꞉base-of-clojure.vector-list-test꞉> 
; 
; ERROR in () (AFn.java:429)
; 
; expected: (= (list 7 7 7 7 7) (make_repeatedly_list 5 rand-int))
;   actual: clojure.lang.ArityException: Wrong number of args (0) passed to: clojure.core/rand-int
;  at clojure.lang.AFn.throwArity (AFn.java:429)
;     clojure.lang.AFn.invoke (AFn.java:28)
;     clojure.core$repeatedly$fn__6531.invoke (core.clj:5174)
;     clojure.lang.LazySeq.sval (LazySeq.java:42)
;     clojure.lang.LazySeq.seq (LazySeq.java:51)
;     clojure.lang.RT.seq (RT.java:535)
;     clojure.core$seq__5467.invokeStatic (core.clj:139)
;     clojure.core$take$fn__5978.invoke (core.clj:2901)
;     clojure.lang.LazySeq.sval (LazySeq.java:42)
;     clojure.lang.LazySeq.seq (LazySeq.java:51)
;     clojure.lang.RT.seq (RT.java:535)
;     clojure.lang.ASeq.equiv (ASeq.java:45)
;     clojure.lang.Util.pcequiv (Util.java:124)
;     clojure.lang.Util.equiv (Util.java:32)
;     clojure.core$_EQ_.invokeStatic (core.clj:795)
;     clojure.core$_EQ_.invoke (core.clj:785)
;     clojure.lang.AFn.applyToHelper (AFn.java:156)
;     clojure.lang.RestFn.applyTo (RestFn.java:132)
;     clojure.core$apply.invokeStatic (core.clj:667)
;     clojure.core$apply.invoke (core.clj:662)
;     base_of_clojure.vector_list_test$eval10638.invokeStatic (form-init13928129459247513016.clj:20)
;     base_of_clojure.vector_list_test$eval10638.invoke (form-init13928129459247513016.clj:19)
;     clojure.lang.Compiler.eval (Compiler.java:7194)
;     clojure.lang.Compiler.eval (Compiler.java:7149)
;     clojure.core$eval.invokeStatic (core.clj:3215)
;     clojure.core$eval.invoke (core.clj:3211)
;     nrepl.middleware.interruptible_eval$evaluate$fn__1362$fn__1363.invoke (interruptible_eval.clj:87)
;     clojure.lang.AFn.applyToHelper (AFn.java:152)
;     clojure.lang.AFn.applyTo (AFn.java:144)
;     clojure.core$apply.invokeStatic (core.clj:667)
;     clojure.core$with_bindings_STAR_.invokeStatic (core.clj:1990)
;     clojure.core$with_bindings_STAR_.doInvoke (core.clj:1990)
;     clojure.lang.RestFn.invoke (RestFn.java:425)
;     nrepl.middleware.interruptible_eval$evaluate$fn__1362.invoke (interruptible_eval.clj:87)
;     clojure.main$repl$read_eval_print__9206$fn__9209.invoke (main.clj:437)
;     clojure.main$repl$read_eval_print__9206.invoke (main.clj:437)
;     clojure.main$repl$fn__9215.invoke (main.clj:458)
;     clojure.main$repl.invokeStatic (main.clj:458)
;     clojure.main$repl.doInvoke (main.clj:368)
;     clojure.lang.RestFn.invoke (RestFn.java:1523)
;     nrepl.middleware.interruptible_eval$evaluate.invokeStatic (interruptible_eval.clj:84)
;     nrepl.middleware.interruptible_eval$evaluate.invoke (interruptible_eval.clj:56)
;     nrepl.middleware.interruptible_eval$interruptible_eval$fn__1395$fn__1399.invoke (interruptible_eval.clj:152)
;     clojure.lang.AFn.run (AFn.java:22)
;     nrepl.middleware.session$session_exec$main_loop__1465$fn__1469.invoke (session.clj:218)
;     nrepl.middleware.session$session_exec$main_loop__1465.invoke (session.clj:217)
;     clojure.lang.AFn.run (AFn.java:22)
;     java.lang.Thread.run (Thread.java:1570)
nil
clj꞉base-of-clojure.vector-list-test꞉> 
#'base-of-clojure.vector-list-test/make_repeatedly_list-test
clj꞉base-of-clojure.vector-list-test꞉> 
; Execution error (ArityException) at base-of-clojure.vector-list-test/eval10647 (form-init13928129459247513016.clj:20).
; Wrong number of args (1) passed to: base-of-clojure.vector-list/make-repeatedly-list
clj꞉base-of-clojure.vector-list-test꞉> 
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in Terminal: (cd /Users/behike56/00-Development/000-repo/base-of-clojure; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; nREPL Connection was closed
; Using host:port 127.0.0.1:49828 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉base-of-clojure.core꞉> 
; Jack-in done.
clj꞉base-of-clojure.core꞉> 
(1 9 6 3 6)
clj꞉base-of-clojure.vector-list-test꞉> 
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in Terminal: (cd /Users/behike56/00-Development/000-repo/base-of-clojure; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; nREPL Connection was closed
; Using host:port 127.0.0.1:60750 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉base-of-clojure.core꞉> 
; Jack-in done.
clj꞉base-of-clojure.core꞉> 
; 
; FAIL in () (form-init9744359328057216702.clj:13)
; FIXME, I fail.
; expected: (= [1 2 3] (make_vec2 #{1 3 2}))
;   actual: (not (= [1 2 3] [1 3 2]))
; 
; FAIL in () (form-init9744359328057216702.clj:14)
; FIXME, I fail.
; expected: (= [1 2 3] (make_vec2 {:a 1, :b 2, :c 3}))
;   actual: (not (= [1 2 3] [[:a 1] [:b 2] [:c 3]]))
false
clj꞉base-of-clojure.vector-list-test꞉> 
true
clj꞉base-of-clojure.vector-list-test꞉> 
; 
; FAIL in () (form-init9744359328057216702.clj:13)
; expected: (= [1 2 3] (make_vec2 #{1 3 2}))
;   actual: (not (= [1 2 3] [1 3 2]))
false
clj꞉base-of-clojure.vector-list-test꞉> 
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in Terminal: (cd /Users/behike56/00-Development/000-repo/base-of-clojure; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; nREPL Connection was closed
; Using host:port 127.0.0.1:60769 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉base-of-clojure.core꞉> 
; Jack-in done.
clj꞉base-of-clojure.core꞉> 
true
clj꞉base-of-clojure.vector-list-test꞉> 
; 
; FAIL in () (form-init1199158415126357115.clj:13)
; expected: (= [1 2 3] (make_vec2 #{1 3 2}))
;   actual: (not (= [1 2 3] [1 3 2]))
false
clj꞉base-of-clojure.vector-list-test꞉> 
; 
; FAIL in () (form-init1199158415126357115.clj:14)
; expected: (= [1 2 3] (make_vec2 {:a 1, :b 2, :c 3}))
;   actual: (not (= [1 2 3] [[:a 1] [:b 2] [:c 3]]))
false
clj꞉base-of-clojure.vector-list-test꞉> 
; 
; ERROR in () (PersistentTreeMap.java:338)
; expected: (= [1 2 3] (make_vec2 (sorted-set #{1 3 2})))
;   actual: java.lang.ClassCastException: Default comparator requires nil, Number, or Comparable: #{1 3 2}
;  at clojure.lang.PersistentTreeMap.add (PersistentTreeMap.java:338)
;     clojure.lang.PersistentTreeMap.assoc (PersistentTreeMap.java:128)
;     clojure.lang.PersistentTreeMap.assoc (PersistentTreeMap.java:26)
;     clojure.lang.PersistentTreeSet.cons (PersistentTreeSet.java:70)
;     clojure.lang.PersistentTreeSet.create (PersistentTreeSet.java:26)
;     clojure.core$sorted_set.invokeStatic (core.clj:425)
;     clojure.core$sorted_set.doInvoke (core.clj:419)
;     clojure.lang.RestFn.invoke (RestFn.java:408)
;     base_of_clojure.vector_list_test$eval10371.invokeStatic (form-init1199158415126357115.clj:13)
;     base_of_clojure.vector_list_test$eval10371.invoke (form-init1199158415126357115.clj:13)
;     clojure.lang.Compiler.eval (Compiler.java:7194)
;     clojure.lang.Compiler.eval (Compiler.java:7149)
;     clojure.core$eval.invokeStatic (core.clj:3215)
;     clojure.core$eval.invoke (core.clj:3211)
;     nrepl.middleware.interruptible_eval$evaluate$fn__1362$fn__1363.invoke (interruptible_eval.clj:87)
;     clojure.lang.AFn.applyToHelper (AFn.java:152)
;     clojure.lang.AFn.applyTo (AFn.java:144)
;     clojure.core$apply.invokeStatic (core.clj:667)
;     clojure.core$with_bindings_STAR_.invokeStatic (core.clj:1990)
;     clojure.core$with_bindings_STAR_.doInvoke (core.clj:1990)
;     clojure.lang.RestFn.invoke (RestFn.java:425)
;     nrepl.middleware.interruptible_eval$evaluate$fn__1362.invoke (interruptible_eval.clj:87)
;     clojure.main$repl$read_eval_print__9206$fn__9209.invoke (main.clj:437)
;     clojure.main$repl$read_eval_print__9206.invoke (main.clj:437)
;     clojure.main$repl$fn__9215.invoke (main.clj:458)
;     clojure.main$repl.invokeStatic (main.clj:458)
;     clojure.main$repl.doInvoke (main.clj:368)
;     clojure.lang.RestFn.invoke (RestFn.java:1523)
;     nrepl.middleware.interruptible_eval$evaluate.invokeStatic (interruptible_eval.clj:84)
;     nrepl.middleware.interruptible_eval$evaluate.invoke (interruptible_eval.clj:56)
;     nrepl.middleware.interruptible_eval$interruptible_eval$fn__1395$fn__1399.invoke (interruptible_eval.clj:152)
;     clojure.lang.AFn.run (AFn.java:22)
;     nrepl.middleware.session$session_exec$main_loop__1465$fn__1469.invoke (session.clj:218)
;     nrepl.middleware.session$session_exec$main_loop__1465.invoke (session.clj:217)
;     clojure.lang.AFn.run (AFn.java:22)
;     java.lang.Thread.run (Thread.java:1570)
nil
clj꞉base-of-clojure.vector-list-test꞉> 
true
clj꞉base-of-clojure.vector-list-test꞉> 
; 
; FAIL in () (form-init1199158415126357115.clj:13)
; expected: (= [1 2 3] (make_vec2 (sorted-set :1 :2 :3)))
;   actual: (not (= [1 2 3] [:1 :2 :3]))
false
clj꞉base-of-clojure.vector-list-test꞉> 
true
clj꞉base-of-clojure.vector-list-test꞉> 
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in Terminal: (cd /Users/behike56/00-Development/000-repo/base-of-clojure; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; nREPL Connection was closed
; Using host:port 127.0.0.1:60817 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉base-of-clojure.core꞉> 
; Jack-in done.
clj꞉base-of-clojure.core꞉> 
true
clj꞉base-of-clojure.vector-list-test꞉> 
; 
; FAIL in () (form-init5848069060114085815.clj:14)
; expected: (= [1 2 3] (make_vec2 {:a 1, :b 2, :c 3}))
;   actual: (not (= [1 2 3] [[:a 1] [:b 2] [:c 3]]))
false
clj꞉base-of-clojure.vector-list-test꞉> 
[[:a 1] [:b 2] [:c 3]]
clj꞉base-of-clojure.vector-list-test꞉> 
true
clj꞉base-of-clojure.vector-list-test꞉> 
; 
; FAIL in () (form-init5848069060114085815.clj:8)
; vectorのテスト
; expected: (= [4 5 6] (make_vec [1 2 3]))
;   actual: (not (= [4 5 6] [4 5 6 [1 2 3]]))
false
clj꞉base-of-clojure.vector-list-test꞉> 
true
clj꞉base-of-clojure.vector-list-test꞉> 
; 
; Testing base-of-clojure.vector-list-test
; 
; Ran 0 tests containing 0 assertions.
; 0 failures, 0 errors.
{:test 0, :pass 0, :fail 0, :error 0, :type :summary}
clj꞉base-of-clojure.vector-list-test꞉> 
; 
; Testing base-of-clojure.vector-list-test
; 
; Ran 0 tests containing 0 assertions.
; 0 failures, 0 errors.
{:test 0, :pass 0, :fail 0, :error 0, :type :summary}
clj꞉base-of-clojure.vector-list-test꞉> 
; Syntax error compiling at (test/base_of_clojure/vector_list_test.clj:18:25).
; Unable to resolve symbol: make_vec3 in this context
clj꞉base-of-clojure.vector-list-test꞉> 
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in Terminal: (cd /Users/behike56/00-Development/000-repo/base-of-clojure; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; nREPL Connection was closed
; Using host:port 127.0.0.1:61760 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉base-of-clojure.core꞉> 
; Jack-in done.
clj꞉base-of-clojure.core꞉> 
[1 2 3]
clj꞉base-of-clojure.vector-list-test꞉> 
[1 2 3]
clj꞉base-of-clojure.vector-list-test꞉> 
true
clj꞉base-of-clojure.vector-list-test꞉> 
